#!/usr/bin/sh

# Example for $XDG_CONFIG_HOME/sxiv/exec/key-handler
# Called by sxiv(1) after the external prefix key (C-x by default) is pressed.
# The next key combo is passed as its first argument. Passed via stdin are the
# images to act upon, one path per line: all marked images, if in thumbnail
# mode and at least one image has been marked, otherwise the current image.
# sxiv(1) blocks until this script terminates. It then checks which images
# have been modified and reloads them.

# The key combo argument has the following form: "[C-][M-][S-]KEY",
# where C/M/S indicate Ctrl/Meta(Alt)/Shift modifier states and KEY is the X
# keysym as listed in /usr/include/X11/keysymdef.h without the "XK_" prefix.

mkdir -p ~/.coomer/

has_sudo() { sudo -n true; }
ask_for_password() {
	notify-send 'ok' "<span color='#57dafd' font='26px'>Enter the password on console...</span>"
}

rotate() {
	degree="$1"
	tr '\n' '\0' | xargs -0 realpath | sort | uniq | while read -r file; do
		case "$(file -b -i "$file")" in
		image/jpeg*) jpegtran -rotate "$degree" -copy all -outfile "$file" "$file" ;;
		*) mogrify -rotate "$degree" "$file" ;;
		esac
	done
}

case "$1" in
"C-x") xclip -in -filter | tr '\n' ' ' | xclip -in -selection clipboard ;;
"C-c") while read -r file; do xclip -selection clipboard -target image/png "$file"; done ;;
"C-e") while read -r file; do urxvt -bg "#444" -fg "#eee" -sl 0 -title "$file" -e sh -c "exiv2 pr -q -pa '$file' | less" & done ;;
"C-g") tr '\n' '\0' | xargs -0 gimp & ;;
"C-k")
	skip_sudo=1
	while read -r image; do
		if [[ -O ${image} ]]; then
			rm -fv "${image}"
		else
			if [[ ${skip_sudo} -eq 1 ]]; then
				has_sudo || ask_for_password
				skip_sudo=0
			fi
			sudo rm -fv "${image}"
		fi
	done
	;;
"C-y")
	CACHEFILE="${HOME}"/.cache/sxiv/copydir.tmp
	if [[ -s ${CACHEFILE} ]]; then
		target=$(zenity --file-selection --filename="$(cat ${CACHEFILE})" --directory)
	else
		target=$(zenity --file-selection --filename="${HOME}" --directory)
	fi

	[[ -z ${target} ]] && exit 1
	[[ ! -d ${target} ]] && exit 1
	echo "${target}" >${CACHEFILE}

	if [[ ! -O ${target} ]]; then
		has_sudo || ask_for_password
		while read -r image; do
			sudo cp -vu "${image}" "${target}"
		done
	else
		while read -r image; do
			cp -vu "${image}" "${target}"
		done
	fi
	;;
"C-less") rotate 270 ;;
"C-greater") rotate 90 ;;
"C-slash") rotate 180 ;;
"C-p") while read -r file; do
	newfile=$(readlink -e $file)
	ln -s "$newfile" $HOME/.coomer/ &
done ;;
esac
