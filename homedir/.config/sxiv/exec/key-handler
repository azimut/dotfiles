#!/bin/bash

# Example for $XDG_CONFIG_HOME/sxiv/exec/key-handler
# Called by sxiv(1) after the external prefix key (C-x by default) is pressed.
# The next key combo is passed as its first argument. Passed via stdin are the
# images to act upon, one path per line: all marked images, if in thumbnail
# mode and at least one image has been marked, otherwise the current image.
# sxiv(1) blocks until this script terminates. It then checks which images
# have been modified and reloads them.

# The key combo argument has the following form: "[C-][M-][S-]KEY",
# where C/M/S indicate Ctrl/Meta(Alt)/Shift modifier states and KEY is the X
# keysym as listed in /usr/include/X11/keysymdef.h without the "XK_" prefix.

mkdir -p ~/.coomer/

has_sudo() { sudo -n true; }
notify() {
    local msg
    msg="${1}"
    notify-send "${0}" "<span color='#57dafd' font='26px'>${msg}</span>"
}
ask_for_password() {
    notify 'Enter the password on console...'
}

ocrdecode() {
    local image="$1"
    local decoded
    decoded="$(tesseract "${image}" - 2>/dev/null)"
    if (("${#decoded}" == 3)); then
        zenity --info --text="No OCR text found!"
    else
        zenity --text-info --filename=<(echo "${decoded}")
    fi

}
qrdecode() {
    local image="$1"
    local decoded
    decoded="$(zbarimg "${image}" 2>/dev/null)"
    if [ -z "$decoded" ]; then
        zenity --info --text="No QRCODE found!"
    else
        zenity --text-info --filename=<(echo "${decoded}")
    fi
}

rename() {
    old_filename="$1"
    old_basename="$(basename ${old_filename})"
    old_dirname="$(dirname ${old_filename})"
    new_basename="$(zenity --entry --text "Rename to?" --entry-text "${old_basename}")"
    [[ -z ${new_basename} ]] && return 0
    [[ ${new_basename} == "${old_basename}" ]] && return 0
    mv -v ${old_filename} "${old_dirname}/${new_basename}"
}

rotate() {
    degree="$1"
    has_sudo || ask_for_password
    tr '\n' '\0' | xargs -0 realpath | sort | uniq | while read -r file; do
        case "$(file -b -i "$file")" in
        image/jpeg*) gksu.rb "${file}" jpegtran -rotate "$degree" -copy all -outfile "$file" ;;
        *) gksu.rb "${file}" mogrify -rotate "$degree" ;;
        esac
        printf "rotated %dÂ°\n" "${degree}"
    done
}

case "$1" in
"C-h") zenity --text-info --filename=<(
    column -t -s '|' -o $'\t' <(
        cat <<EOF
C-x|xclip copy path?
C-c|xclip copy image
C-e|urxvt?
|
C-r|rename
C-k|rm -f
C-y|cp
C-p|coomer
C-o|OCR image
C-q|find QRCODE with zbarimg
|
C-<|rotate left
C->|rotate right
C-/|rotate 180

EOF
    )
) ;;
"C-o") while read -r file; do ocrdecode "${file}"; done ;;
"C-q") while read -r file; do qrdecode "${file}"; done ;;
"C-x") xclip -in -filter | tr '\n' ' ' | xclip -in -selection clipboard ;;
"C-c") while read -r file; do xclip -selection clipboard -target image/png "$file"; done ;;
"C-e") while read -r file; do urxvt -bg "#444" -fg "#eee" -sl 0 -title "$file" -e sh -c "exiv2 pr -q -pa '$file' | less" & done ;;
"C-k")
    while read -r image; do
        gksu.rb "${image}" rm -vf
    done
    ;;
"C-y")
    CACHEFILE="${HOME}"/.cache/sxiv/copydir.tmp
    if [[ -s ${CACHEFILE} ]]; then
        target=$(zenity --file-selection --filename="$(cat ${CACHEFILE})" --directory)
    else
        target=$(zenity --file-selection --filename="${HOME}" --directory)
    fi

    [[ -z ${target} ]] && exit 1
    [[ ! -d ${target} ]] && exit 1
    echo "${target}" >${CACHEFILE}

    if [[ ! -O ${target} ]]; then
        has_sudo || ask_for_password
        while read -r image; do
            sudo cp -vu "${image}" "${target}" || notify 'failed to cp'
        done
    else
        while read -r image; do
            cp -vu "${image}" "${target}" || notify 'failed to cp'
        done
    fi
    ;;
"C-less") rotate 270 ;;
"C-greater") rotate 90 ;;
"C-slash") rotate 180 ;;
"C-r")
    read -r file
    rename "$(readlink -e ${file})"
    ;;
"C-p") while read -r file; do
    newfile=$(readlink -e $file)
    ln -s "$newfile" $HOME/.coomer/ &
done ;;
esac
